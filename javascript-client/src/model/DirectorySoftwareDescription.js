/**
 * Swiss Corporate API
 * This is the release candidate version of the \"Swiss Corporate API\" specification. 
 *
 * OpenAPI spec version: 1.0.0.2-SNAPSHOT
 * Contact: swisscorpapi@six-group.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DirectoryImageReference', 'model/DirectoryMarketingDescription', 'model/DirectoryMultisizeImageReference', 'model/DirectoryProductName', 'model/DirectoryShortDescription'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DirectoryImageReference'), require('./DirectoryMarketingDescription'), require('./DirectoryMultisizeImageReference'), require('./DirectoryProductName'), require('./DirectoryShortDescription'));
  } else {
    // Browser globals (root is window)
    if (!root.SwissCorporateApi) {
      root.SwissCorporateApi = {};
    }
    root.SwissCorporateApi.DirectorySoftwareDescription = factory(root.SwissCorporateApi.ApiClient, root.SwissCorporateApi.DirectoryImageReference, root.SwissCorporateApi.DirectoryMarketingDescription, root.SwissCorporateApi.DirectoryMultisizeImageReference, root.SwissCorporateApi.DirectoryProductName, root.SwissCorporateApi.DirectoryShortDescription);
  }
}(this, function(ApiClient, DirectoryImageReference, DirectoryMarketingDescription, DirectoryMultisizeImageReference, DirectoryProductName, DirectoryShortDescription) {
  'use strict';




  /**
   * The DirectorySoftwareDescription model module.
   * @module model/DirectorySoftwareDescription
   * @version 1.0.0.2-SNAPSHOT
   */

  /**
   * Constructs a new <code>DirectorySoftwareDescription</code>.
   * @alias module:model/DirectorySoftwareDescription
   * @class
   * @param productName {module:model/DirectoryProductName} 
   * @param manufacturer {String} 
   * @param category {Array.<module:model/DirectorySoftwareDescription.CategoryEnum>} 
   * @param productInfoUrl {String} 
   * @param productLogo {module:model/DirectoryMultisizeImageReference} 
   * @param marketingDescription {module:model/DirectoryMarketingDescription} 
   * @param shortDescription {module:model/DirectoryShortDescription} 
   */
  var exports = function(productName, manufacturer, category, productInfoUrl, productLogo, marketingDescription, shortDescription) {
    var _this = this;

    _this['productName'] = productName;
    _this['manufacturer'] = manufacturer;
    _this['category'] = category;
    _this['productInfoUrl'] = productInfoUrl;
    _this['productLogo'] = productLogo;

    _this['marketingDescription'] = marketingDescription;
    _this['shortDescription'] = shortDescription;
  };

  /**
   * Constructs a <code>DirectorySoftwareDescription</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DirectorySoftwareDescription} obj Optional instance to populate.
   * @return {module:model/DirectorySoftwareDescription} The populated <code>DirectorySoftwareDescription</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('productName')) {
        obj['productName'] = DirectoryProductName.constructFromObject(data['productName']);
      }
      if (data.hasOwnProperty('manufacturer')) {
        obj['manufacturer'] = ApiClient.convertToType(data['manufacturer'], 'String');
      }
      if (data.hasOwnProperty('category')) {
        obj['category'] = ApiClient.convertToType(data['category'], ['String']);
      }
      if (data.hasOwnProperty('productInfoUrl')) {
        obj['productInfoUrl'] = ApiClient.convertToType(data['productInfoUrl'], 'String');
      }
      if (data.hasOwnProperty('productLogo')) {
        obj['productLogo'] = DirectoryMultisizeImageReference.constructFromObject(data['productLogo']);
      }
      if (data.hasOwnProperty('marketingImage')) {
        obj['marketingImage'] = DirectoryImageReference.constructFromObject(data['marketingImage']);
      }
      if (data.hasOwnProperty('marketingDescription')) {
        obj['marketingDescription'] = DirectoryMarketingDescription.constructFromObject(data['marketingDescription']);
      }
      if (data.hasOwnProperty('shortDescription')) {
        obj['shortDescription'] = DirectoryShortDescription.constructFromObject(data['shortDescription']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/DirectoryProductName} productName
   */
  exports.prototype['productName'] = undefined;
  /**
   * @member {String} manufacturer
   */
  exports.prototype['manufacturer'] = undefined;
  /**
   * @member {Array.<module:model/DirectorySoftwareDescription.CategoryEnum>} category
   */
  exports.prototype['category'] = undefined;
  /**
   * @member {String} productInfoUrl
   */
  exports.prototype['productInfoUrl'] = undefined;
  /**
   * @member {module:model/DirectoryMultisizeImageReference} productLogo
   */
  exports.prototype['productLogo'] = undefined;
  /**
   * @member {module:model/DirectoryImageReference} marketingImage
   */
  exports.prototype['marketingImage'] = undefined;
  /**
   * @member {module:model/DirectoryMarketingDescription} marketingDescription
   */
  exports.prototype['marketingDescription'] = undefined;
  /**
   * @member {module:model/DirectoryShortDescription} shortDescription
   */
  exports.prototype['shortDescription'] = undefined;


  /**
   * Allowed values for the <code>category</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CategoryEnum = {
    /**
     * value: "ACCOUNTING"
     * @const
     */
    "ACCOUNTING": "ACCOUNTING"  };


  return exports;
}));


