/**
 * Swiss Corporate API
 * This is the release candidate version of the \"Swiss Corporate API\" specification. 
 *
 * OpenAPI spec version: 1.0.0.2-SNAPSHOT
 * Contact: swisscorpapi@six-group.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SwissCorporateApi) {
      root.SwissCorporateApi = {};
    }
    root.SwissCorporateApi.DirectoryImageReference = factory(root.SwissCorporateApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The DirectoryImageReference model module.
   * @module model/DirectoryImageReference
   * @version 1.0.0.2-SNAPSHOT
   */

  /**
   * Constructs a new <code>DirectoryImageReference</code>.
   * @alias module:model/DirectoryImageReference
   * @class
   * @param mimeType {String} 
   * @param image {Blob} 
   */
  var exports = function(mimeType, image) {
    var _this = this;

    _this['mimeType'] = mimeType;
    _this['image'] = image;
  };

  /**
   * Constructs a <code>DirectoryImageReference</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DirectoryImageReference} obj Optional instance to populate.
   * @return {module:model/DirectoryImageReference} The populated <code>DirectoryImageReference</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('mimeType')) {
        obj['mimeType'] = ApiClient.convertToType(data['mimeType'], 'String');
      }
      if (data.hasOwnProperty('image')) {
        obj['image'] = ApiClient.convertToType(data['image'], 'Blob');
      }
    }
    return obj;
  }

  /**
   * @member {String} mimeType
   */
  exports.prototype['mimeType'] = undefined;
  /**
   * @member {Blob} image
   */
  exports.prototype['image'] = undefined;



  return exports;
}));


