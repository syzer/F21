/**
 * Swiss Corporate API
 * This is the release candidate version of the \"Swiss Corporate API\" specification. 
 *
 * OpenAPI spec version: 1.0.0.2-SNAPSHOT
 * Contact: swisscorpapi@six-group.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountTransactionBankTransactionCode', 'model/AccountTransactionInstructedAmount', 'model/AccountTransactionItem', 'model/AccountTransactionItemCharges', 'model/AccountTransactionTransactionType', 'model/PaymentCurrencyAmount'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccountTransactionBankTransactionCode'), require('./AccountTransactionInstructedAmount'), require('./AccountTransactionItem'), require('./AccountTransactionItemCharges'), require('./AccountTransactionTransactionType'), require('./PaymentCurrencyAmount'));
  } else {
    // Browser globals (root is window)
    if (!root.SwissCorporateApi) {
      root.SwissCorporateApi = {};
    }
    root.SwissCorporateApi.AccountTransactionEntry = factory(root.SwissCorporateApi.ApiClient, root.SwissCorporateApi.AccountTransactionBankTransactionCode, root.SwissCorporateApi.AccountTransactionInstructedAmount, root.SwissCorporateApi.AccountTransactionItem, root.SwissCorporateApi.AccountTransactionItemCharges, root.SwissCorporateApi.AccountTransactionTransactionType, root.SwissCorporateApi.PaymentCurrencyAmount);
  }
}(this, function(ApiClient, AccountTransactionBankTransactionCode, AccountTransactionInstructedAmount, AccountTransactionItem, AccountTransactionItemCharges, AccountTransactionTransactionType, PaymentCurrencyAmount) {
  'use strict';




  /**
   * The AccountTransactionEntry model module.
   * @module model/AccountTransactionEntry
   * @version 1.0.0.2-SNAPSHOT
   */

  /**
   * Constructs a new <code>AccountTransactionEntry</code>.
   * @alias module:model/AccountTransactionEntry
   * @class
   * @param entryId {String} 
   * @param transactionType {module:model/AccountTransactionTransactionType} 
   * @param bookingDate {Date} 
   * @param valueDate {Date} 
   * @param amount {module:model/PaymentCurrencyAmount} 
   * @param bankTransactionCode {module:model/AccountTransactionBankTransactionCode} 
   */
  var exports = function(entryId, transactionType, bookingDate, valueDate, amount, bankTransactionCode) {
    var _this = this;

    _this['entryId'] = entryId;
    _this['transactionType'] = transactionType;



    _this['bookingDate'] = bookingDate;
    _this['valueDate'] = valueDate;
    _this['amount'] = amount;


    _this['bankTransactionCode'] = bankTransactionCode;


  };

  /**
   * Constructs a <code>AccountTransactionEntry</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountTransactionEntry} obj Optional instance to populate.
   * @return {module:model/AccountTransactionEntry} The populated <code>AccountTransactionEntry</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('entryId')) {
        obj['entryId'] = ApiClient.convertToType(data['entryId'], 'String');
      }
      if (data.hasOwnProperty('transactionType')) {
        obj['transactionType'] = AccountTransactionTransactionType.constructFromObject(data['transactionType']);
      }
      if (data.hasOwnProperty('entryReference')) {
        obj['entryReference'] = ApiClient.convertToType(data['entryReference'], 'String');
      }
      if (data.hasOwnProperty('entryReferenceInternalId')) {
        obj['entryReferenceInternalId'] = ApiClient.convertToType(data['entryReferenceInternalId'], 'String');
      }
      if (data.hasOwnProperty('reversalIndicator')) {
        obj['reversalIndicator'] = ApiClient.convertToType(data['reversalIndicator'], 'Boolean');
      }
      if (data.hasOwnProperty('bookingDate')) {
        obj['bookingDate'] = ApiClient.convertToType(data['bookingDate'], 'Date');
      }
      if (data.hasOwnProperty('valueDate')) {
        obj['valueDate'] = ApiClient.convertToType(data['valueDate'], 'Date');
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = PaymentCurrencyAmount.constructFromObject(data['amount']);
      }
      if (data.hasOwnProperty('instructedAmount')) {
        obj['instructedAmount'] = AccountTransactionInstructedAmount.constructFromObject(data['instructedAmount']);
      }
      if (data.hasOwnProperty('totalChargesAmount')) {
        obj['totalChargesAmount'] = AccountTransactionItemCharges.constructFromObject(data['totalChargesAmount']);
      }
      if (data.hasOwnProperty('bankTransactionCode')) {
        obj['bankTransactionCode'] = AccountTransactionBankTransactionCode.constructFromObject(data['bankTransactionCode']);
      }
      if (data.hasOwnProperty('additionalEntryInformation')) {
        obj['additionalEntryInformation'] = ApiClient.convertToType(data['additionalEntryInformation'], 'String');
      }
      if (data.hasOwnProperty('transactions')) {
        obj['transactions'] = ApiClient.convertToType(data['transactions'], [AccountTransactionItem]);
      }
    }
    return obj;
  }

  /**
   * @member {String} entryId
   */
  exports.prototype['entryId'] = undefined;
  /**
   * @member {module:model/AccountTransactionTransactionType} transactionType
   */
  exports.prototype['transactionType'] = undefined;
  /**
   * @member {String} entryReference
   */
  exports.prototype['entryReference'] = undefined;
  /**
   * @member {String} entryReferenceInternalId
   */
  exports.prototype['entryReferenceInternalId'] = undefined;
  /**
   * @member {Boolean} reversalIndicator
   */
  exports.prototype['reversalIndicator'] = undefined;
  /**
   * @member {Date} bookingDate
   */
  exports.prototype['bookingDate'] = undefined;
  /**
   * @member {Date} valueDate
   */
  exports.prototype['valueDate'] = undefined;
  /**
   * @member {module:model/PaymentCurrencyAmount} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * @member {module:model/AccountTransactionInstructedAmount} instructedAmount
   */
  exports.prototype['instructedAmount'] = undefined;
  /**
   * @member {module:model/AccountTransactionItemCharges} totalChargesAmount
   */
  exports.prototype['totalChargesAmount'] = undefined;
  /**
   * @member {module:model/AccountTransactionBankTransactionCode} bankTransactionCode
   */
  exports.prototype['bankTransactionCode'] = undefined;
  /**
   * @member {String} additionalEntryInformation
   */
  exports.prototype['additionalEntryInformation'] = undefined;
  /**
   * @member {Array.<module:model/AccountTransactionItem>} transactions
   */
  exports.prototype['transactions'] = undefined;



  return exports;
}));


