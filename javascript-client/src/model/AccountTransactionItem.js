/**
 * Swiss Corporate API
 * This is the release candidate version of the \"Swiss Corporate API\" specification. 
 *
 * OpenAPI spec version: 1.0.0.2-SNAPSHOT
 * Contact: swisscorpapi@six-group.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountTransactionBankTransactionCode', 'model/AccountTransactionCounterparty', 'model/AccountTransactionInstructedAmount', 'model/AccountTransactionItemCharges', 'model/AccountTransactionRemittanceReference', 'model/AccountTransactionTransactionType', 'model/PaymentCurrencyAmount', 'model/PaymentRemittanceInformation'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccountTransactionBankTransactionCode'), require('./AccountTransactionCounterparty'), require('./AccountTransactionInstructedAmount'), require('./AccountTransactionItemCharges'), require('./AccountTransactionRemittanceReference'), require('./AccountTransactionTransactionType'), require('./PaymentCurrencyAmount'), require('./PaymentRemittanceInformation'));
  } else {
    // Browser globals (root is window)
    if (!root.SwissCorporateApi) {
      root.SwissCorporateApi = {};
    }
    root.SwissCorporateApi.AccountTransactionItem = factory(root.SwissCorporateApi.ApiClient, root.SwissCorporateApi.AccountTransactionBankTransactionCode, root.SwissCorporateApi.AccountTransactionCounterparty, root.SwissCorporateApi.AccountTransactionInstructedAmount, root.SwissCorporateApi.AccountTransactionItemCharges, root.SwissCorporateApi.AccountTransactionRemittanceReference, root.SwissCorporateApi.AccountTransactionTransactionType, root.SwissCorporateApi.PaymentCurrencyAmount, root.SwissCorporateApi.PaymentRemittanceInformation);
  }
}(this, function(ApiClient, AccountTransactionBankTransactionCode, AccountTransactionCounterparty, AccountTransactionInstructedAmount, AccountTransactionItemCharges, AccountTransactionRemittanceReference, AccountTransactionTransactionType, PaymentCurrencyAmount, PaymentRemittanceInformation) {
  'use strict';




  /**
   * The AccountTransactionItem model module.
   * @module model/AccountTransactionItem
   * @version 1.0.0.2-SNAPSHOT
   */

  /**
   * Constructs a new <code>AccountTransactionItem</code>.
   * @alias module:model/AccountTransactionItem
   * @class
   * @param transactionId {String} 
   * @param transactionType {module:model/AccountTransactionTransactionType} 
   * @param amount {module:model/PaymentCurrencyAmount} 
   */
  var exports = function(transactionId, transactionType, amount) {
    var _this = this;

    _this['transactionId'] = transactionId;
    _this['transactionType'] = transactionType;


    _this['amount'] = amount;






  };

  /**
   * Constructs a <code>AccountTransactionItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountTransactionItem} obj Optional instance to populate.
   * @return {module:model/AccountTransactionItem} The populated <code>AccountTransactionItem</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('transactionId')) {
        obj['transactionId'] = ApiClient.convertToType(data['transactionId'], 'String');
      }
      if (data.hasOwnProperty('transactionType')) {
        obj['transactionType'] = AccountTransactionTransactionType.constructFromObject(data['transactionType']);
      }
      if (data.hasOwnProperty('endToEndId')) {
        obj['endToEndId'] = ApiClient.convertToType(data['endToEndId'], 'String');
      }
      if (data.hasOwnProperty('bankTransactionCode')) {
        obj['bankTransactionCode'] = AccountTransactionBankTransactionCode.constructFromObject(data['bankTransactionCode']);
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = PaymentCurrencyAmount.constructFromObject(data['amount']);
      }
      if (data.hasOwnProperty('instructedAmount')) {
        obj['instructedAmount'] = AccountTransactionInstructedAmount.constructFromObject(data['instructedAmount']);
      }
      if (data.hasOwnProperty('totalChargesAmount')) {
        obj['totalChargesAmount'] = AccountTransactionItemCharges.constructFromObject(data['totalChargesAmount']);
      }
      if (data.hasOwnProperty('counterparty')) {
        obj['counterparty'] = AccountTransactionCounterparty.constructFromObject(data['counterparty']);
      }
      if (data.hasOwnProperty('remittanceInformation')) {
        obj['remittanceInformation'] = PaymentRemittanceInformation.constructFromObject(data['remittanceInformation']);
      }
      if (data.hasOwnProperty('remittanceReference')) {
        obj['remittanceReference'] = AccountTransactionRemittanceReference.constructFromObject(data['remittanceReference']);
      }
      if (data.hasOwnProperty('additionalTransactionInformation')) {
        obj['additionalTransactionInformation'] = ApiClient.convertToType(data['additionalTransactionInformation'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} transactionId
   */
  exports.prototype['transactionId'] = undefined;
  /**
   * @member {module:model/AccountTransactionTransactionType} transactionType
   */
  exports.prototype['transactionType'] = undefined;
  /**
   * @member {String} endToEndId
   */
  exports.prototype['endToEndId'] = undefined;
  /**
   * @member {module:model/AccountTransactionBankTransactionCode} bankTransactionCode
   */
  exports.prototype['bankTransactionCode'] = undefined;
  /**
   * @member {module:model/PaymentCurrencyAmount} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * @member {module:model/AccountTransactionInstructedAmount} instructedAmount
   */
  exports.prototype['instructedAmount'] = undefined;
  /**
   * @member {module:model/AccountTransactionItemCharges} totalChargesAmount
   */
  exports.prototype['totalChargesAmount'] = undefined;
  /**
   * @member {module:model/AccountTransactionCounterparty} counterparty
   */
  exports.prototype['counterparty'] = undefined;
  /**
   * @member {module:model/PaymentRemittanceInformation} remittanceInformation
   */
  exports.prototype['remittanceInformation'] = undefined;
  /**
   * @member {module:model/AccountTransactionRemittanceReference} remittanceReference
   */
  exports.prototype['remittanceReference'] = undefined;
  /**
   * @member {String} additionalTransactionInformation
   */
  exports.prototype['additionalTransactionInformation'] = undefined;



  return exports;
}));


