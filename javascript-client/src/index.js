/**
 * Swiss Corporate API
 * This is the release candidate version of the \"Swiss Corporate API\" specification. 
 *
 * OpenAPI spec version: 1.0.0.2-SNAPSHOT
 * Contact: swisscorpapi@six-group.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountBalanceItem', 'model/AccountBalanceItemLinks', 'model/AccountItem', 'model/AccountItemLinks', 'model/AccountTransactionBankTransactionCode', 'model/AccountTransactionCounterparty', 'model/AccountTransactionCounterpartyAccount', 'model/AccountTransactionCounterpartyAgent', 'model/AccountTransactionEntry', 'model/AccountTransactionInstructedAmount', 'model/AccountTransactionItem', 'model/AccountTransactionItemCharges', 'model/AccountTransactionItemChargesRecord', 'model/AccountTransactionRemittanceReference', 'model/AccountTransactionReport', 'model/AccountTransactionReportLinks', 'model/AccountTransactionTransactionType', 'model/BalanceCurrencyAmount', 'model/CommonClearingSystemMemberIdentification', 'model/CommonErrorResponse', 'model/CommonErrorType', 'model/CommonStructuredAddress', 'model/CommonStructuredOrUnstructuredAddress', 'model/CommonUnstructuredAddress', 'model/ConsentAccountItem', 'model/ConsentItem', 'model/DirectoryClientItem', 'model/DirectoryContact', 'model/DirectoryImageReference', 'model/DirectoryMarketingDescription', 'model/DirectoryMultisizeImageReference', 'model/DirectoryParticipantItem', 'model/DirectoryParticipantStatus', 'model/DirectoryProductName', 'model/DirectoryProviderItem', 'model/DirectoryShortDescription', 'model/DirectorySoftwareDescription', 'model/DirectoryUseCaseItem', 'model/HealthCheckResponse', 'model/HealthCheckResponseReceivedHeaders', 'model/Iso20022ReportReference', 'model/OauthTokenResponse', 'model/PaymentBookingInstruction', 'model/PaymentChargeBearerMethod', 'model/PaymentCreditor', 'model/PaymentCreditorAgent', 'model/PaymentCurrencyAmount', 'model/PaymentEndToEndId', 'model/PaymentIBANDetail', 'model/PaymentISRDetail', 'model/PaymentIbanAccount', 'model/PaymentIbanRemittanceReference', 'model/PaymentInstructionItem', 'model/PaymentInstructionItemStatus', 'model/PaymentIsrRemittanceReference', 'model/PaymentOtherAccount', 'model/PaymentOtherDetail', 'model/PaymentOtherRemittanceReference', 'model/PaymentRemittanceInformation', 'model/PaymentSubmissionRequest', 'model/PaymentSubmissionStatus', 'api/AccountsApi', 'api/ConsentsApi', 'api/DiagnosticsApi', 'api/DirectoryApi', 'api/Iso20022Api', 'api/OauthApi', 'api/PaymentsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccountBalanceItem'), require('./model/AccountBalanceItemLinks'), require('./model/AccountItem'), require('./model/AccountItemLinks'), require('./model/AccountTransactionBankTransactionCode'), require('./model/AccountTransactionCounterparty'), require('./model/AccountTransactionCounterpartyAccount'), require('./model/AccountTransactionCounterpartyAgent'), require('./model/AccountTransactionEntry'), require('./model/AccountTransactionInstructedAmount'), require('./model/AccountTransactionItem'), require('./model/AccountTransactionItemCharges'), require('./model/AccountTransactionItemChargesRecord'), require('./model/AccountTransactionRemittanceReference'), require('./model/AccountTransactionReport'), require('./model/AccountTransactionReportLinks'), require('./model/AccountTransactionTransactionType'), require('./model/BalanceCurrencyAmount'), require('./model/CommonClearingSystemMemberIdentification'), require('./model/CommonErrorResponse'), require('./model/CommonErrorType'), require('./model/CommonStructuredAddress'), require('./model/CommonStructuredOrUnstructuredAddress'), require('./model/CommonUnstructuredAddress'), require('./model/ConsentAccountItem'), require('./model/ConsentItem'), require('./model/DirectoryClientItem'), require('./model/DirectoryContact'), require('./model/DirectoryImageReference'), require('./model/DirectoryMarketingDescription'), require('./model/DirectoryMultisizeImageReference'), require('./model/DirectoryParticipantItem'), require('./model/DirectoryParticipantStatus'), require('./model/DirectoryProductName'), require('./model/DirectoryProviderItem'), require('./model/DirectoryShortDescription'), require('./model/DirectorySoftwareDescription'), require('./model/DirectoryUseCaseItem'), require('./model/HealthCheckResponse'), require('./model/HealthCheckResponseReceivedHeaders'), require('./model/Iso20022ReportReference'), require('./model/OauthTokenResponse'), require('./model/PaymentBookingInstruction'), require('./model/PaymentChargeBearerMethod'), require('./model/PaymentCreditor'), require('./model/PaymentCreditorAgent'), require('./model/PaymentCurrencyAmount'), require('./model/PaymentEndToEndId'), require('./model/PaymentIBANDetail'), require('./model/PaymentISRDetail'), require('./model/PaymentIbanAccount'), require('./model/PaymentIbanRemittanceReference'), require('./model/PaymentInstructionItem'), require('./model/PaymentInstructionItemStatus'), require('./model/PaymentIsrRemittanceReference'), require('./model/PaymentOtherAccount'), require('./model/PaymentOtherDetail'), require('./model/PaymentOtherRemittanceReference'), require('./model/PaymentRemittanceInformation'), require('./model/PaymentSubmissionRequest'), require('./model/PaymentSubmissionStatus'), require('./api/AccountsApi'), require('./api/ConsentsApi'), require('./api/DiagnosticsApi'), require('./api/DirectoryApi'), require('./api/Iso20022Api'), require('./api/OauthApi'), require('./api/PaymentsApi'));
  }
}(function(ApiClient, AccountBalanceItem, AccountBalanceItemLinks, AccountItem, AccountItemLinks, AccountTransactionBankTransactionCode, AccountTransactionCounterparty, AccountTransactionCounterpartyAccount, AccountTransactionCounterpartyAgent, AccountTransactionEntry, AccountTransactionInstructedAmount, AccountTransactionItem, AccountTransactionItemCharges, AccountTransactionItemChargesRecord, AccountTransactionRemittanceReference, AccountTransactionReport, AccountTransactionReportLinks, AccountTransactionTransactionType, BalanceCurrencyAmount, CommonClearingSystemMemberIdentification, CommonErrorResponse, CommonErrorType, CommonStructuredAddress, CommonStructuredOrUnstructuredAddress, CommonUnstructuredAddress, ConsentAccountItem, ConsentItem, DirectoryClientItem, DirectoryContact, DirectoryImageReference, DirectoryMarketingDescription, DirectoryMultisizeImageReference, DirectoryParticipantItem, DirectoryParticipantStatus, DirectoryProductName, DirectoryProviderItem, DirectoryShortDescription, DirectorySoftwareDescription, DirectoryUseCaseItem, HealthCheckResponse, HealthCheckResponseReceivedHeaders, Iso20022ReportReference, OauthTokenResponse, PaymentBookingInstruction, PaymentChargeBearerMethod, PaymentCreditor, PaymentCreditorAgent, PaymentCurrencyAmount, PaymentEndToEndId, PaymentIBANDetail, PaymentISRDetail, PaymentIbanAccount, PaymentIbanRemittanceReference, PaymentInstructionItem, PaymentInstructionItemStatus, PaymentIsrRemittanceReference, PaymentOtherAccount, PaymentOtherDetail, PaymentOtherRemittanceReference, PaymentRemittanceInformation, PaymentSubmissionRequest, PaymentSubmissionStatus, AccountsApi, ConsentsApi, DiagnosticsApi, DirectoryApi, Iso20022Api, OauthApi, PaymentsApi) {
  'use strict';

  /**
   * This_is_the_release_candidate_version_of_the_Swiss_Corporate_API_specification_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var SwissCorporateApi = require('index'); // See note below*.
   * var xxxSvc = new SwissCorporateApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new SwissCorporateApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new SwissCorporateApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new SwissCorporateApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0.2-SNAPSHOT
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccountBalanceItem model constructor.
     * @property {module:model/AccountBalanceItem}
     */
    AccountBalanceItem: AccountBalanceItem,
    /**
     * The AccountBalanceItemLinks model constructor.
     * @property {module:model/AccountBalanceItemLinks}
     */
    AccountBalanceItemLinks: AccountBalanceItemLinks,
    /**
     * The AccountItem model constructor.
     * @property {module:model/AccountItem}
     */
    AccountItem: AccountItem,
    /**
     * The AccountItemLinks model constructor.
     * @property {module:model/AccountItemLinks}
     */
    AccountItemLinks: AccountItemLinks,
    /**
     * The AccountTransactionBankTransactionCode model constructor.
     * @property {module:model/AccountTransactionBankTransactionCode}
     */
    AccountTransactionBankTransactionCode: AccountTransactionBankTransactionCode,
    /**
     * The AccountTransactionCounterparty model constructor.
     * @property {module:model/AccountTransactionCounterparty}
     */
    AccountTransactionCounterparty: AccountTransactionCounterparty,
    /**
     * The AccountTransactionCounterpartyAccount model constructor.
     * @property {module:model/AccountTransactionCounterpartyAccount}
     */
    AccountTransactionCounterpartyAccount: AccountTransactionCounterpartyAccount,
    /**
     * The AccountTransactionCounterpartyAgent model constructor.
     * @property {module:model/AccountTransactionCounterpartyAgent}
     */
    AccountTransactionCounterpartyAgent: AccountTransactionCounterpartyAgent,
    /**
     * The AccountTransactionEntry model constructor.
     * @property {module:model/AccountTransactionEntry}
     */
    AccountTransactionEntry: AccountTransactionEntry,
    /**
     * The AccountTransactionInstructedAmount model constructor.
     * @property {module:model/AccountTransactionInstructedAmount}
     */
    AccountTransactionInstructedAmount: AccountTransactionInstructedAmount,
    /**
     * The AccountTransactionItem model constructor.
     * @property {module:model/AccountTransactionItem}
     */
    AccountTransactionItem: AccountTransactionItem,
    /**
     * The AccountTransactionItemCharges model constructor.
     * @property {module:model/AccountTransactionItemCharges}
     */
    AccountTransactionItemCharges: AccountTransactionItemCharges,
    /**
     * The AccountTransactionItemChargesRecord model constructor.
     * @property {module:model/AccountTransactionItemChargesRecord}
     */
    AccountTransactionItemChargesRecord: AccountTransactionItemChargesRecord,
    /**
     * The AccountTransactionRemittanceReference model constructor.
     * @property {module:model/AccountTransactionRemittanceReference}
     */
    AccountTransactionRemittanceReference: AccountTransactionRemittanceReference,
    /**
     * The AccountTransactionReport model constructor.
     * @property {module:model/AccountTransactionReport}
     */
    AccountTransactionReport: AccountTransactionReport,
    /**
     * The AccountTransactionReportLinks model constructor.
     * @property {module:model/AccountTransactionReportLinks}
     */
    AccountTransactionReportLinks: AccountTransactionReportLinks,
    /**
     * The AccountTransactionTransactionType model constructor.
     * @property {module:model/AccountTransactionTransactionType}
     */
    AccountTransactionTransactionType: AccountTransactionTransactionType,
    /**
     * The BalanceCurrencyAmount model constructor.
     * @property {module:model/BalanceCurrencyAmount}
     */
    BalanceCurrencyAmount: BalanceCurrencyAmount,
    /**
     * The CommonClearingSystemMemberIdentification model constructor.
     * @property {module:model/CommonClearingSystemMemberIdentification}
     */
    CommonClearingSystemMemberIdentification: CommonClearingSystemMemberIdentification,
    /**
     * The CommonErrorResponse model constructor.
     * @property {module:model/CommonErrorResponse}
     */
    CommonErrorResponse: CommonErrorResponse,
    /**
     * The CommonErrorType model constructor.
     * @property {module:model/CommonErrorType}
     */
    CommonErrorType: CommonErrorType,
    /**
     * The CommonStructuredAddress model constructor.
     * @property {module:model/CommonStructuredAddress}
     */
    CommonStructuredAddress: CommonStructuredAddress,
    /**
     * The CommonStructuredOrUnstructuredAddress model constructor.
     * @property {module:model/CommonStructuredOrUnstructuredAddress}
     */
    CommonStructuredOrUnstructuredAddress: CommonStructuredOrUnstructuredAddress,
    /**
     * The CommonUnstructuredAddress model constructor.
     * @property {module:model/CommonUnstructuredAddress}
     */
    CommonUnstructuredAddress: CommonUnstructuredAddress,
    /**
     * The ConsentAccountItem model constructor.
     * @property {module:model/ConsentAccountItem}
     */
    ConsentAccountItem: ConsentAccountItem,
    /**
     * The ConsentItem model constructor.
     * @property {module:model/ConsentItem}
     */
    ConsentItem: ConsentItem,
    /**
     * The DirectoryClientItem model constructor.
     * @property {module:model/DirectoryClientItem}
     */
    DirectoryClientItem: DirectoryClientItem,
    /**
     * The DirectoryContact model constructor.
     * @property {module:model/DirectoryContact}
     */
    DirectoryContact: DirectoryContact,
    /**
     * The DirectoryImageReference model constructor.
     * @property {module:model/DirectoryImageReference}
     */
    DirectoryImageReference: DirectoryImageReference,
    /**
     * The DirectoryMarketingDescription model constructor.
     * @property {module:model/DirectoryMarketingDescription}
     */
    DirectoryMarketingDescription: DirectoryMarketingDescription,
    /**
     * The DirectoryMultisizeImageReference model constructor.
     * @property {module:model/DirectoryMultisizeImageReference}
     */
    DirectoryMultisizeImageReference: DirectoryMultisizeImageReference,
    /**
     * The DirectoryParticipantItem model constructor.
     * @property {module:model/DirectoryParticipantItem}
     */
    DirectoryParticipantItem: DirectoryParticipantItem,
    /**
     * The DirectoryParticipantStatus model constructor.
     * @property {module:model/DirectoryParticipantStatus}
     */
    DirectoryParticipantStatus: DirectoryParticipantStatus,
    /**
     * The DirectoryProductName model constructor.
     * @property {module:model/DirectoryProductName}
     */
    DirectoryProductName: DirectoryProductName,
    /**
     * The DirectoryProviderItem model constructor.
     * @property {module:model/DirectoryProviderItem}
     */
    DirectoryProviderItem: DirectoryProviderItem,
    /**
     * The DirectoryShortDescription model constructor.
     * @property {module:model/DirectoryShortDescription}
     */
    DirectoryShortDescription: DirectoryShortDescription,
    /**
     * The DirectorySoftwareDescription model constructor.
     * @property {module:model/DirectorySoftwareDescription}
     */
    DirectorySoftwareDescription: DirectorySoftwareDescription,
    /**
     * The DirectoryUseCaseItem model constructor.
     * @property {module:model/DirectoryUseCaseItem}
     */
    DirectoryUseCaseItem: DirectoryUseCaseItem,
    /**
     * The HealthCheckResponse model constructor.
     * @property {module:model/HealthCheckResponse}
     */
    HealthCheckResponse: HealthCheckResponse,
    /**
     * The HealthCheckResponseReceivedHeaders model constructor.
     * @property {module:model/HealthCheckResponseReceivedHeaders}
     */
    HealthCheckResponseReceivedHeaders: HealthCheckResponseReceivedHeaders,
    /**
     * The Iso20022ReportReference model constructor.
     * @property {module:model/Iso20022ReportReference}
     */
    Iso20022ReportReference: Iso20022ReportReference,
    /**
     * The OauthTokenResponse model constructor.
     * @property {module:model/OauthTokenResponse}
     */
    OauthTokenResponse: OauthTokenResponse,
    /**
     * The PaymentBookingInstruction model constructor.
     * @property {module:model/PaymentBookingInstruction}
     */
    PaymentBookingInstruction: PaymentBookingInstruction,
    /**
     * The PaymentChargeBearerMethod model constructor.
     * @property {module:model/PaymentChargeBearerMethod}
     */
    PaymentChargeBearerMethod: PaymentChargeBearerMethod,
    /**
     * The PaymentCreditor model constructor.
     * @property {module:model/PaymentCreditor}
     */
    PaymentCreditor: PaymentCreditor,
    /**
     * The PaymentCreditorAgent model constructor.
     * @property {module:model/PaymentCreditorAgent}
     */
    PaymentCreditorAgent: PaymentCreditorAgent,
    /**
     * The PaymentCurrencyAmount model constructor.
     * @property {module:model/PaymentCurrencyAmount}
     */
    PaymentCurrencyAmount: PaymentCurrencyAmount,
    /**
     * The PaymentEndToEndId model constructor.
     * @property {module:model/PaymentEndToEndId}
     */
    PaymentEndToEndId: PaymentEndToEndId,
    /**
     * The PaymentIBANDetail model constructor.
     * @property {module:model/PaymentIBANDetail}
     */
    PaymentIBANDetail: PaymentIBANDetail,
    /**
     * The PaymentISRDetail model constructor.
     * @property {module:model/PaymentISRDetail}
     */
    PaymentISRDetail: PaymentISRDetail,
    /**
     * The PaymentIbanAccount model constructor.
     * @property {module:model/PaymentIbanAccount}
     */
    PaymentIbanAccount: PaymentIbanAccount,
    /**
     * The PaymentIbanRemittanceReference model constructor.
     * @property {module:model/PaymentIbanRemittanceReference}
     */
    PaymentIbanRemittanceReference: PaymentIbanRemittanceReference,
    /**
     * The PaymentInstructionItem model constructor.
     * @property {module:model/PaymentInstructionItem}
     */
    PaymentInstructionItem: PaymentInstructionItem,
    /**
     * The PaymentInstructionItemStatus model constructor.
     * @property {module:model/PaymentInstructionItemStatus}
     */
    PaymentInstructionItemStatus: PaymentInstructionItemStatus,
    /**
     * The PaymentIsrRemittanceReference model constructor.
     * @property {module:model/PaymentIsrRemittanceReference}
     */
    PaymentIsrRemittanceReference: PaymentIsrRemittanceReference,
    /**
     * The PaymentOtherAccount model constructor.
     * @property {module:model/PaymentOtherAccount}
     */
    PaymentOtherAccount: PaymentOtherAccount,
    /**
     * The PaymentOtherDetail model constructor.
     * @property {module:model/PaymentOtherDetail}
     */
    PaymentOtherDetail: PaymentOtherDetail,
    /**
     * The PaymentOtherRemittanceReference model constructor.
     * @property {module:model/PaymentOtherRemittanceReference}
     */
    PaymentOtherRemittanceReference: PaymentOtherRemittanceReference,
    /**
     * The PaymentRemittanceInformation model constructor.
     * @property {module:model/PaymentRemittanceInformation}
     */
    PaymentRemittanceInformation: PaymentRemittanceInformation,
    /**
     * The PaymentSubmissionRequest model constructor.
     * @property {module:model/PaymentSubmissionRequest}
     */
    PaymentSubmissionRequest: PaymentSubmissionRequest,
    /**
     * The PaymentSubmissionStatus model constructor.
     * @property {module:model/PaymentSubmissionStatus}
     */
    PaymentSubmissionStatus: PaymentSubmissionStatus,
    /**
     * The AccountsApi service constructor.
     * @property {module:api/AccountsApi}
     */
    AccountsApi: AccountsApi,
    /**
     * The ConsentsApi service constructor.
     * @property {module:api/ConsentsApi}
     */
    ConsentsApi: ConsentsApi,
    /**
     * The DiagnosticsApi service constructor.
     * @property {module:api/DiagnosticsApi}
     */
    DiagnosticsApi: DiagnosticsApi,
    /**
     * The DirectoryApi service constructor.
     * @property {module:api/DirectoryApi}
     */
    DirectoryApi: DirectoryApi,
    /**
     * The Iso20022Api service constructor.
     * @property {module:api/Iso20022Api}
     */
    Iso20022Api: Iso20022Api,
    /**
     * The OauthApi service constructor.
     * @property {module:api/OauthApi}
     */
    OauthApi: OauthApi,
    /**
     * The PaymentsApi service constructor.
     * @property {module:api/PaymentsApi}
     */
    PaymentsApi: PaymentsApi
  };

  return exports;
}));
